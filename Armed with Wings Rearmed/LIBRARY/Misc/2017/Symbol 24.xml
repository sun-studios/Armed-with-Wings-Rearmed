<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="Misc/2017/Symbol 24" itemID="58d653d5-00000e8a" lastModified="1492846146" lastUniqueIdentifier="2">
  <timeline>
    <DOMTimeline name="Symbol 24">
      <layers>
        <DOMLayer name="Layer 3" color="#FF800A" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[import flash.display.MovieClip;

var currentIndex:int;
var currentClip:MovieClip;

var isOpen:Boolean;
var keyFilter0:Boolean;
var keyFilter1:Boolean;
var keyFilter2:Boolean;
var keyFilter3:Boolean;
var confirmed:Boolean;

var ctrl:PlayerControl;
var sndCtrl:MovieClip;
var transition:MovieClip;

init();

function open(state:String = "RETRY"):void {
	
	isOpen = true;
	x = 0;
	y = 0;
	visible = true;
	selectButton(false);
	currentIndex = 0;
	
	keyFilter0 = true;
	keyFilter1 = true;
	keyFilter2 = true;
	keyFilter3 = true;
	confirmed = false;
	
	switch (state) {
		case "RETRY":
			tf_label.text = "RESTART LEVEL?";
			break;
		case "QUIT":
			tf_label.text = "EXIT TO MAIN MENU?";
			break;
	}
}

function init ():void {
	ctrl = MovieClip(root).player1Control;
	sndCtrl = MovieClip(root);
	transition = MovieClip(parent).transition;
}

function update ():void {
	if (isOpen && !confirmed) {
		updateCursor();
		
		//down ------------------------
		if (ctrl.ctrl_down) {
			if (!keyFilter0) {
				if (currentIndex < 1) {
					currentIndex ++;
					selectButton();
				}
				keyFilter0 = true;
			}
		} else {
			keyFilter0 = false;
		}
		
		//up ------------------------
		if (ctrl.ctrl_up) {
			if (!keyFilter1) {
				if (currentIndex > 0) {
					currentIndex --;
					selectButton();
				}
				keyFilter1 = true;
			}
		} else {
			keyFilter1 = false;
		}
		
		//confirm ------------------------
		if (ctrl.ctrl_confirmStart) {
			if (!keyFilter2) {
				switch (currentIndex) {
					case 0:
						doConfirm();
						break;
					case 1:
						doCancel();
						break;
				}
				keyFilter2 = true;
			}
		} else {
			keyFilter2 = false;
		}
		
		//cancel ------------------------
		if (ctrl.ctrl_cancel) {
			if (!keyFilter3) {
				doCancel();
				keyFilter3 = true;
			}
		} else {
			keyFilter3 = false;
		}
		
	}
}

function updateCursor():void {
	var X:Number = this["btn"+currentIndex].x - 125;
	var Y:Number = this["btn"+currentIndex].y + 25;
	
	cursor.x += (X - cursor.x)/3;
	cursor.y += (Y - cursor.y)/3;
}

function selectButton(playSound:Boolean = true):void {
	if (playSound) sndCtrl.playUISound(sndCtrl.sndButton1);
	if (currentClip) currentClip.gotoAndPlay("out");
	currentClip = this["btn" + currentIndex];
	currentClip.gotoAndPlay("over");
	sndCtrl.playSound(sndCtrl.sndButton1);
}

function doConfirm():void {
	confirmed = true;
	sndCtrl.playUISound(sndCtrl.sndButton3);
	transition.gotoAndPlay(2);
	MovieClip(parent).addChild(transition);
	bgClip.gotoAndPlay(2);
}

function doCancel():void {
	sndCtrl.playUISound(sndCtrl.sndButton2);
	MovieClip(parent).buttons.optionConfirmed = false;
	MovieClip(parent).buttons.resetFilters();
	isOpen = false;
	visible = false;
}]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 4" color="#FF4FFF">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="UI/UI-UpdateGame/Symbol 26" name="cursor">
                  <matrix>
                    <Matrix tx="-127.7" ty="100.8"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 1" color="#4F80FF">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="Misc/2017/Symbol 21" name="bgClip">
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                  <filters>
                    <DropShadowFilter angle="90" blurX="10" blurY="10" distance="18" quality="2" strength="0.28"/>
                  </filters>
                </DOMSymbolInstance>
                <DOMComponentInstance libraryItemName="UI/UI-Btn-Thin/UI-Btn-Thin-Icon2" name="btn0" uniqueID="1">
                  <matrix>
                    <Matrix a="0.882522583007813" d="0.882522583007813" tx="0.3"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="-0.3" y="0.1"/>
                  </transformationPoint>
                  <filters>
                    <DropShadowFilter blurX="11" blurY="11" color="#FFFFFF" distance="4" strength="0.46"/>
                  </filters>
                  <color>
                    <Color redMultiplier="-1" blueMultiplier="-1" greenMultiplier="-1" redOffset="255" blueOffset="255" greenOffset="255"/>
                  </color>
                  <parametersAsXML><![CDATA[   <property id="label">
      <Inspectable name="label" variable="label" category="" verbose="0" defaultValue="CONFIRM" type="String"/>
   </property>
]]></parametersAsXML>
                </DOMComponentInstance>
                <DOMComponentInstance libraryItemName="UI/UI-Btn-Thin/UI-Btn-Thin-Icon2" name="btn1" uniqueID="2">
                  <matrix>
                    <Matrix a="0.882522583007813" d="0.882522583007813" tx="0.3" ty="72.35"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="-0.3" y="0.05"/>
                  </transformationPoint>
                  <filters>
                    <DropShadowFilter blurX="11" blurY="11" distance="4" strength="0.46"/>
                  </filters>
                  <parametersAsXML><![CDATA[   <property id="label">
      <Inspectable name="label" variable="label" category="" verbose="0" defaultValue="BACK" type="String"/>
   </property>
]]></parametersAsXML>
                </DOMComponentInstance>
                <DOMDynamicText name="tf_label" left="-84.05" width="346.6" height="51.85" isSelectable="false" lineType="multiline">
                  <matrix>
                    <Matrix tx="-86.45" ty="-97.25"/>
                  </matrix>
                  <textRuns>
                    <DOMTextRun>
                      <characters>RESTART LEVEL?</characters>
                      <textAttrs>
                        <DOMTextAttrs alignment="center" aliasText="false" autoKern="false" lineHeight="26.85" size="30" bitmapSize="600" face="Font 7*" fillColor="#FFFFFF"/>
                      </textAttrs>
                    </DOMTextRun>
                  </textRuns>
                  <filters>
                    <DropShadowFilter blurX="3" blurY="3" distance="3" strength="0.6"/>
                  </filters>
                </DOMDynamicText>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer 2" color="#9933CC">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <elements>
                <DOMShape>
                  <fills>
                    <FillStyle index="1">
                      <SolidColor color="#FFFFFF" alpha="0.898039215686275"/>
                    </FillStyle>
                  </fills>
                  <edges>
                    <Edge fillStyle1="1" edges="!8100 -4560|8100 4560!8100 4560|-8101 4560!-8101 4560|-8101 -4560!-8101 -4560|8100 -4560"/>
                  </edges>
                </DOMShape>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>